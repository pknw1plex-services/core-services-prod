services:
  tailscale_full:
    image: tailscale/tailscale:latest
    container_name: tailscale_full
    hostname: tailscale_full
    env_file: .env
    privileged: true
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY} 
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_DEST_IP=${DMZ_NETWORK_ROUTE}
    volumes:
      - ./config/tailscale/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    networks:
      - proxy
    restart: unless-stopped

  nginx_proxy_manager:
    image: 'docker.io/jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    env_file: .env
    dns:
      - 172.22.20.1
      - 8.8.8.8
      - 100.100.100.100
    ports:
      - ${HOST_IP}:80:80
      - ${HOST_IP}:443:443
        #- ${HOST_IP}:81:81
      - 100.100.69.2:80:80
      - 100.100.69.2:443:443
      - 100.100.69.2:81:81
    privileged: true
    volumes:
      - ./config/nginx_proxy_manager/data:/data
      - ./config/nginx_proxy_manager/letsencrypt:/etc/letsencrypt
    container_name: proxymanager
    hostname: proxymanager
    networks:
      - proxy
    environment:
      - VIRTUAL_HOST=proxymanager.admin.${TLD}
      - VIRTUAL_PORT=81
      - APP_GROUP=Core
      - APP_LOGO=https://nginxproxymanager.com/icon.png
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 60s
      timeout: 30s


  internal_proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: internal_proxy
    hostname: internal_proxy
    volumes:
      #- /etc/docker/config/internal_proxy/custom_config/proxy.conf:/etc/nginx/proxy.conf
      - ./config/internal_proxy/error_pages:/etc/nginx/error_pages
      - /var/run/docker.sock:/tmp/docker.sock
      - /var/run/fcgiwrap.socket:/var/run/fcgiwrap.socket
      - /var/run/php-fpm.sock:/var/run/php-fpm.sock
    ports:
      - 172.22.20.1:8888:80
    dns:
      - 172.22.20.1
      - 8.8.8.8
      - 100.100.100.100
    networks:
      proxy:
    environment:
      - TRUST_DOWNSTREAM_PROXY=true

  sso:
    env_file: .env
    image: pknw1/plexsso:custom #drkno/plexsso:latest
    container_name: sso
    hostname: sso
    networks:
      proxy:
    volumes:
      - ./config/sso:/config
      - ./config/sso/marvin-eyes-DpuYtzcb.png:/app/ui/assets/marvin-eyes-DpuYtzcb.png
    environment:
      - VIRTUAL_HOST=sso.pknw1.co.uk
      - VIRTUAL_PORT=4200
      - APP_GROUP=Core
      - APP_LOGO=https://i.imgur.com/Alt6K7E.png
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 200M

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    cap_add:
      - NET_ADMIN
    networks:
      - proxy
    privileged: true
    ports:
      - 172.22.20.1:53:53/tcp
      - 172.22.20.1:53:53/udp
    volumes:
      #      - /etc/resolv.conf:/etc/host-resolv.conf
      - /etc/pihole/custom.list:/etc/pihole/custom.list
      - ./config/pihole/lighttpd:/etc/lighttpd
      - ./config/pihole/etc:/etc/pihole
      - ./config/pihole/dnsmasq.d:/etc/dnsmasq.d
    environment:
      - APP_GROUP=Utilities
      - APP_LOGO=https://www.mycyberuniverse.com/images/articles/Arthur/how-update-pi-hole/pi-hole-logo.png
      - VIRTUAL_HOST=pihole.admin.pknw1.co.uk
      - VIRTUAL_PORT=80
      - WEBPASSWORD=C0nduit32
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 100M 

  squid:
    image: ubuntu/squid:latest
    dns:
      - 172.22.20.1
      - 1.1.1.1
      - 8.8.8.8
    container_name: squid
    hostname: squid
    networks:
      - proxy
    ports:
      - 172.22.20.1:3128:3128
    volumes:
      - ./config/squid/etc:/etc/squid
      - ./config/squid/shared-acl-lists:/acl:ro
      - ./config/squid/pid:/run/squid
      - ./config/squid/logs:/var/log/squid
      - ./config/squid/cache:/var/spool/squid
    environment:
      - APP_GROUP=Utilities
      - APP_LOGO=https://kifarunix.com/wp-content/uploads/2018/12/squid-proxy.png
      - VIRTUAL_HOST=squid.admin.pknw1.co.uk
      - APP_NETWORK=admin
      - VIRTUAL_PORT=3128


  caddy:
    networks:
      - proxy
    image: caddy:latest
    container_name: caddy
    hostname: caddy
    volumes:
      - ./config/caddy:/config
      - /media/www:/var/www
    entrypoint: ["caddy", "run", "--config=/config/Caddyfile", "--watch" ]
    ports:
      - 172.22.20.1:8889:80
    dns:
      - 172.22.20.1
      - 8.8.8.8
      - 100.100.100.100
    environment:
      - APP_GROUP=Content
      - APP_LOGO=https://www.redpill-linpro.com/techblog/images/posts/caddy2-logo.png
      - APP_NETWORK=public
      - VIRTUAL_HOST=*.admin.pknw1.co.uk,*.pknw1.co.uk,pknw1.co.uk,streaming-from.cloud,*.streaming-from.cloud
      - VIRTUAL_PORT=80
    deploy:
      resources:
        limits:
          memory: 2000M
  homer:
    image: b4bz/homer
    container_name: homer
    hostname: homer
    volumes:
      - ./config/homer/config2.yml:/www/assets/config.yml # Make sure your local config directory exists
    user: 1000:1000 # default
    networks:
      - proxy
    dns:
      - 172.22.20.1
      - 8.8.8.8
      - 100.100.100.100
    environment:
      - INIT_ASSETS=1 # default, requires the config directory to be writable for the container user (see user option)
      - APP_GROUP=Content
      - APP_LOGO=https://raw.githubusercontent.com/bastienwirtz/homer/main/public/logo.png
      - VIRTUAL_HOST=homer.admin.pknw1.co.uk,admin.pknw1.co.uk
      - VIRTUAL_PORT=8080
    restart: always
 
  dockergen_homer:
    image: nginxproxy/docker-gen
    command: -config /config/docker_gen.cfg
    container_name: dockergen_homer
    hostname: dockergen_homer
    restart: unless-stopped
    volumes:
      - ./config/homer:/config
      - /etc/pihole:/etc/pihole
      - /var/run/docker.sock:/tmp/docker.sock
      - /var/run/docker.socker:/var/run/docker.sock
    networks:
      - proxy
    dns:
      - 172.22.20.1
      - 8.8.8.8
      - 100.100.100.100

  uptime:
    container_name: uptime
    hostname: uptime
    image: louislam/uptime-kuma:latest
    dns:
      - 8.8.8.8
      - 172.22.20.1
      - 100.100.100.100
    networks:
      proxy:
    volumes:
      - ./config/uptime-kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PUID=0
      - APP_GROUP=Monitoring
      - APP_LOGO=https://strawberrysec.net/assets/images/HomeLab/Uptime_Kuma_Header.png
      - VIRTUAL_HOST=status.pknw1.co.uk
      - APP_NETWORK=public
      - VIRTUAL_PORT=3001
      - VIRTUAL_PROTO=http


  portainer:
    env_file: .env
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    privileged: true
    networks:
      - proxy
    volumes:
      - /etc/pknw1:/etc/pknw1
      - ./config/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=portainer.admin.pknw1.co.uk
      - VIRTUAL_PORT=9000
      - APP_GROUP=Core
      - APP_LOGO=https://static-00.iconduck.com/assets.00/portainer-icon-1465x2048-t155ekm0.png

  registry:
    image: registry:latest
    container_name: registry
    hostname: registry
    networks:
      - proxy
    volumes:
      - ./config/registry:/config
    ports:
      - 172.22.20.1:5000:5000
    environment:
      - APP_GROUP=Core
      - APP_LOGO=https://symbols.getvecta.com/stencil_27/31_container-registry.9ac93f2e9f.png
      - VIRTUAL_HOST=docker.pknw1.co.uk
      - VIRTUAL_PORT=5000
        #      - REGISTRY_AUTH=htpasswd
        #      - REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm
        #      - REGISTRY_AUTH_HTPASSWD_PATH=/config/auth/.htpasswd
      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/config/data

  registry-ui:
    image: joxit/docker-registry-ui:main
    restart: always
    networks:
      - proxy
    environment:
      - APP_GROUP=Core
      - APP_LOGO=https://symbols.getvecta.com/stencil_27/31_container-registry.9ac93f2e9f.png
      - VIRTUAL_HOST=docker.admin.pknw1.co.uk
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Docker Registry UI
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - NGINX_PROXY_PASS_URL=http://172.22.20.1:5000
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    container_name: registry-ui



networks:
  dmz:
    name: ${DMZ_NETWORK} 
    external: true

  public:
    name: public  
    external: true

  admin:
    name: admin      
    external: true

  proxy:
    name: proxy
    external: true

